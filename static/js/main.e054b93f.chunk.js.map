{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","msg","Navbar","Mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","for","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","showAlert","handlelwClick","toLowerCase","handlemailClick","split","length","defaultProps","App","setMode","setAlert","Message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e054b93f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    return (\r\n        props.alert && <div className= {`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-body-dark bg-${props.Mode} navbar-${props.Mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">About</a>\r\n            </li>\r\n          </ul>\r\n          {/* <div className={`form-check form-switch text-${props.Mode === 'light' ? 'green' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.greenMode} />\r\n            <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable {props.Mode === 'light' ? 'green' : 'light'} Mode</label>\r\n          </div> */}\r\n          \r\n          <div className={`form-check form-switch text-${props.Mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n            <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable {props.Mode === 'light' ? 'dark' : 'light'} Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here'\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=>{\r\n        // console.log(\"uppercase is clicked\" +  text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n\r\n    const handlelwClick = ()=>{\r\n        // console.log(\"lowercase is clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n\r\n    const handlemailClick = ()=>{\r\n      let newText = '';\r\n      setText(newText);\r\n      props.showAlert(\"Text is Clear\", \"success\");\r\n  }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(`Enter text here`);\r\n    // text = \"new text\" //wrong way to change the state\r\n    // setText = \"new text\" // correct way to change the state\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.Mode === 'dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n              <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.Mode === 'dark'?'gray':'white', color: props.Mode === 'dark'?'white':'black'}} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n          </div>\r\n          <div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handlelwClick}>Conver to lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handlemailClick}>Clear</button>\r\n          </div>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.Mode === 'dark'?'white':'black'}}>\r\n      <h1>Your text summery</h1>\r\n      <p>{text.split(\" \").length} Words and {text.length} characters</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something to about textBox to preview here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, {useState} from 'react';\n\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (Message, type) =>{\n    setAlert({\n      msg: Message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n  const toggleMode = ()=>{\n    if (Mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#2d343f';\n      showAlert('Dark Mode enable sucessefull', 'success');\n    } \n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode enable sucessefull', 'success');\n    }\n  }\n\n  return (\n    <>\n<Navbar title='TextTutils' Mode = {Mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n<TextForm showAlert = {showAlert} heading='Enter your Text below' Mode = {Mode}/>\n</div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}